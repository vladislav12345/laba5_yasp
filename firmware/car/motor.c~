
struct Motor{
	byte time;
	byte timeCounter;
	byte speed;
	byte lr;
	byte fb;
	byte lrdelay;
	byte fbdelay;
}motor;

void motorMove(byte time, byte fb, byte lr){
	motor.time=time;
	motor.timeCounter=0;

	if(fb==FB_FORWARD){
		digitalWrite(MOTOR_FB_BPIN,LOW);
		motor.fbdelay=50;
	}else if(fb==FB_BACK){
		digitalWrite(MOTOR_FB_FPIN,LOW);
		motor.fbdelay=50;
	}else if(fb==FB_STOP){
		digitalWrite(MOTOR_FB_FPIN,LOW);
		digitalWrite(MOTOR_FB_BPIN,LOW);
	}

	if(lr==LR_LEFT){
		if(motor.lr==LR_RIGHT){
			digitalWrite(MOTOR_LR_RPIN,LOW);
			motor.lrdelay=100;
		}else{
			motor.lrdelay=50;
		}
		analogWrite(MOTOR_LR_SPEEDPIN,80);
		digitalWrite(MOTOR_LR_LPIN,HIGH);
	}else if(lr==LR_RIGHT){
		if(motor.lr==LR_LEFT){
			digitalWrite(MOTOR_LR_LPIN,LOW);
			motor.lrdelay=100;
		}else{
			motor.lrdelay=50;
		}
		analogWrite(MOTOR_LR_SPEEDPIN,80);
		digitalWrite(MOTOR_LR_RPIN,HIGH);
	}else if(lr==LR_CENTER){
		if(motor.lr==LR_LEFT){
			digitalWrite(MOTOR_LR_LPIN,LOW);
			motor.lrdelay=50;
			digitalWrite(MOTOR_LR_RPIN,HIGH);
			analogWrite(MOTOR_LR_SPEEDPIN,80);
		}else if(motor.lr==LR_RIGHT){
			digitalWrite(MOTOR_LR_RPIN,LOW);
			motor.lrdelay=50;
			digitalWrite(MOTOR_LR_LPIN,HIGH);
			analogWrite(MOTOR_LR_SPEEDPIN,80);
		}
	}

	motor.lr=lr;
	motor.fb=fb;
}

void motorProcess{
	if(motor.fbdelay>0){
		--motor.fbdelay;

		if(motor.frdelay==0){
			if(motor.fb==FB_FORWARD){
				digitalWrite(MOTOR_FB_FPIN,HIGH);
			}else if(motor.fb==FB_BACK){
				digitalWrite(MOTOR_FB_BPIN,HIGH);
			}
		}
	}

	if(motor.lrdelay>0){
		--motor.lrdelay;

		if(motor.lrdelay==0){
			if(motor.lr==LR_CENTER){
				digitalWrite(MOTOR_LR_LPIN,LOW);
				digitalWrite(MOTOR_LR_RPIN,LOW);
			}
			analogWrite(MOTOR_LR_SPEEDPIN,20);
		}
	}

	if(motor.time!=0){
		++motor.timeCounter;

		if(motor.timeCounter==MAX_TIME_COUNTER){
			motor.timeCounter=0;
			--motor.time;
			if(motor.time==0){
				motorMove(0,FB_STOP,LR_CENTER);
			}
		}
	}

}

void motorSpeed(byte value){
	motor.speed=value;
	analogWrite(MOTOR_FB_SPEEDPIN,value);
}

void motorInit(){
	pinMode(MOTOR_LR_LPIN,OUTPUT);
	pinMode(MOTOR_LR_RPIN,OUTPUT);
	pinMode(MOTOR_LR_SPEEDPIN,OUTPUT);

	pinMode(MOTOR_FB_FPIN,OUTPUT);
	pinMode(MOTOR_FB_BPIN,OUTPUT);

	pinMode(MOTOR_FB_SPEEDPIN,OUTPUT);
	
	motor.fbdelay=0;
	motor.lrdelay=0;
	motorSpeed(80);
	motor.lr=FB_CENTER;
	motorMove(0,FB_STOP,FB_CENTER);
}
